version: '3.8'

services:
  recipe-api-server:
    build: 
      context: .
      dockerfile: servers/recipe_api_server/Dockerfile.prod
      args:
        - BUILD_DATE=${BUILD_DATE}
        - VCS_REF=${VCS_REF}
        - VERSION=${VERSION:-0.1.0}
    container_name: florence-recipe-api-prod
    environment:
      - SPOONACULAR_API_KEY=${SPOONACULAR_API_KEY}
      - EDAMAM_APP_ID=${EDAMAM_APP_ID}
      - EDAMAM_APP_KEY=${EDAMAM_APP_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=production
    stdin_open: true
    tty: true
    restart: always
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - florence-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:15-alpine
    container_name: florence-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sous_chef}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Production init scripts
      - ./infrastructure/database/init:/docker-entrypoint-initdb.d:ro
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - florence-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: florence-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - florence-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Reverse proxy for future HTTP endpoints
  nginx:
    image: nginx:alpine
    container_name: florence-nginx
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - recipe-api-server
    restart: always
    networks:
      - florence-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  florence-network:
    driver: bridge